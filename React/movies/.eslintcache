[{"D:\\Batches\\MMUB\\React\\movies\\src\\index.js":"1","D:\\Batches\\MMUB\\React\\movies\\src\\App.js":"2","D:\\Batches\\MMUB\\React\\movies\\src\\reportWebVitals.js":"3","D:\\Batches\\MMUB\\React\\movies\\src\\Components\\Movies.js":"4","D:\\Batches\\MMUB\\React\\movies\\src\\Components\\getMovies.js":"5","D:\\Batches\\MMUB\\React\\movies\\src\\Components\\About.js":"6","D:\\Batches\\MMUB\\React\\movies\\src\\Components\\Home.js":"7","D:\\Batches\\MMUB\\React\\movies\\src\\Nav.js":"8"},{"size":459,"mtime":1624535883863,"results":"9","hashOfConfig":"10"},{"size":468,"mtime":1624692176409,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":9305,"mtime":1624688424370,"results":"13","hashOfConfig":"10"},{"size":1929,"mtime":1624538057410,"results":"14","hashOfConfig":"10"},{"size":175,"mtime":1624689864912,"results":"15","hashOfConfig":"10"},{"size":176,"mtime":1624689891357,"results":"16","hashOfConfig":"10"},{"size":172,"mtime":1624692109872,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"magh4z",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Batches\\MMUB\\React\\movies\\src\\index.js",[],["36","37"],"D:\\Batches\\MMUB\\React\\movies\\src\\App.js",[],"D:\\Batches\\MMUB\\React\\movies\\src\\reportWebVitals.js",[],"D:\\Batches\\MMUB\\React\\movies\\src\\Components\\Movies.js",["38","39","40","41","42","43","44","45"],"import React, { Component } from 'react'\r\nimport { getMovies } from './getMovies';\r\nimport axios from 'axios';\r\nexport default class Movies extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [],\r\n            currSearchText: '',\r\n            currPage: 1,\r\n            genres: [{ _id: 'abcd', name: 'All Genres' }],\r\n            cGenre: 'All Genres'\r\n\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        console.log('Component DID Mount');\r\n        let res = await axios.get('https://backend-react-movie.herokuapp.com/movies');\r\n        let genreRes = await axios.get('https://backend-react-movie.herokuapp.com/genres');\r\n        // console.log(res.data.movies);\r\n        console.log(genreRes.data.genres);\r\n        this.setState({\r\n            movies: res.data.movies,\r\n            genres: [...this.state.genres, ...genreRes.data.genres]\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        let val = e.target.value;\r\n        console.log(val);\r\n        this.setState({\r\n            currSearchText: val,\r\n\r\n        })\r\n    }\r\n    onDelete = (id) => {\r\n        let arr = this.state.movies.filter(function (movieObj) {\r\n            return movieObj._id !== id;\r\n        })\r\n        // console.log(arr);\r\n        this.setState({\r\n            movies: arr\r\n        });\r\n    }\r\n    sortByRatings = (e) => {\r\n        let className = e.target.className;\r\n        console.log(className);\r\n        let sortedMovies = [];\r\n        if (className == 'fa fa-sort-asc') {\r\n            //ascending order\r\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\r\n                return movieObjA.dailyRentalRate - movieObjB.dailyRentalRate\r\n            })\r\n        }\r\n        else {\r\n            //descending order\r\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\r\n                return movieObjB.dailyRentalRate - movieObjA.dailyRentalRate\r\n            })\r\n        }\r\n        this.setState({\r\n            movies: sortedMovies\r\n        })\r\n    }\r\n    sortByStock = (e) => {\r\n        let className = e.target.className;\r\n        console.log(className);\r\n        let sortedMovies = [];\r\n        if (className == 'fa fa-sort-asc') {\r\n            //ascending order\r\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\r\n                return movieObjA.numberInStock - movieObjB.numberInStock\r\n            })\r\n        }\r\n        else {\r\n            //descending order\r\n            sortedMovies = this.state.movies.sort(function (movieObjA, movieObjB) {\r\n                return movieObjB.numberInStock - movieObjA.numberInStock\r\n            })\r\n        }\r\n        this.setState({\r\n            movies: sortedMovies\r\n        })\r\n    }\r\n    handlePageChange = (pageNumber) => {\r\n        this.setState({ currPage: pageNumber });\r\n    }\r\n    handleGenreChange = (genre) => {\r\n        this.setState({\r\n            cGenre: genre\r\n        })\r\n    }\r\n    render() {\r\n        console.log('render');\r\n        let { movies, currSearchText, currPage, genres, cGenre } = this.state; //ES6 destructuring\r\n        let limit = 4;\r\n        let filteredArr = [];\r\n        if (currSearchText === '') {\r\n            filteredArr = movies;\r\n        }\r\n        else {\r\n            filteredArr = movies.filter(function (movieObj) {\r\n                let title = movieObj.title.toLowerCase();\r\n                console.log(title);\r\n                return title.includes(currSearchText.toLowerCase());\r\n            })\r\n        }\r\n        if (cGenre != 'All Genres') {\r\n            filteredArr = filteredArr.filter(function (movieObj) {\r\n                return movieObj.genre.name == cGenre\r\n            })\r\n        }\r\n        let numberofPage = Math.ceil(filteredArr.length / limit);\r\n        let pageNumberArr = [];\r\n        for (let i = 0; i < numberofPage; i++) {\r\n            pageNumberArr.push(i + 1);\r\n        }\r\n        let si = (currPage - 1) * limit;\r\n        let ei = si + limit;\r\n        filteredArr = filteredArr.slice(si, ei);\r\n        return (\r\n\r\n            //JSX\r\n            <>\r\n                {this.state.movies.length == 0 ? <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </div> :\r\n                    <div className='container'>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <ul className=\"list-group\">\r\n                                    {\r\n                                        genres.map((genreObj) => (\r\n                                            <li onClick={() => this.handleGenreChange(genreObj.name)} key={genreObj._id} className='list-group-item'>\r\n                                                {genreObj.name}\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                                <h5>Current Genre : {cGenre}</h5>\r\n                            </div>\r\n                            <div className='col-9'>\r\n                                <input type='search' value={this.state.currSearchText} onChange={this.handleChange} ></input>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">Title</th>\r\n                                            <th scope=\"col\">Genre</th>\r\n                                            <th scope=\"col\">\r\n                                                <i onClick={this.sortByStock} className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n                                                Stock\r\n                                                <i onClick={this.sortByStock} className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n                                            </th>\r\n                                            <th scope=\"col\">\r\n                                                <i onClick={this.sortByRatings} className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n                                                Rate\r\n                                                <i onClick={this.sortByRatings} className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n                                            </th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            filteredArr.map((movieObj) => {\r\n                                                return (\r\n                                                    <tr key={movieObj._id} >\r\n                                                        <td></td>\r\n                                                        <td>{movieObj.title}</td>\r\n                                                        <td>{movieObj.genre.name}</td>\r\n                                                        <td>{movieObj.numberInStock}</td>\r\n                                                        <td>{movieObj.dailyRentalRate}</td>\r\n                                                        <td><button onClick={() => {\r\n                                                            this.onDelete(movieObj._id)\r\n                                                        }} type=\"button\" className=\"btn btn-danger\">Delete</button></td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <nav aria-label=\"...\">\r\n                                    <ul className=\"pagination\">\r\n                                        {\r\n                                            pageNumberArr.map((pageNumber) => {\r\n                                                let classStyle = pageNumber == currPage ? 'page-item active' : 'page-item';\r\n                                                return (\r\n                                                    <li key={pageNumber} onClick={() => this.handlePageChange(pageNumber)}\r\n                                                        className={classStyle}><span className=\"page-link\">{pageNumber}</span></li>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n{/* <li className=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n    <li className=\"page-item active\" aria-current=\"page\">\r\n      <a className=\"page-link\" href=\"#\">2</a>\r\n    </li>\r\n    <li className=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li> */}","D:\\Batches\\MMUB\\React\\movies\\src\\Components\\getMovies.js",[],"D:\\Batches\\MMUB\\React\\movies\\src\\Components\\About.js",[],"D:\\Batches\\MMUB\\React\\movies\\src\\Components\\Home.js",[],"D:\\Batches\\MMUB\\React\\movies\\src\\Nav.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":48,"column":23,"nodeType":"56","messageId":"57","endLine":48,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":68,"column":23,"nodeType":"56","messageId":"57","endLine":68,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":107,"column":20,"nodeType":"56","messageId":"57","endLine":107,"endColumn":22},{"ruleId":"54","severity":1,"message":"55","line":109,"column":44,"nodeType":"56","messageId":"57","endLine":109,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":124,"column":43,"nodeType":"56","messageId":"57","endLine":124,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":185,"column":77,"nodeType":"56","messageId":"57","endLine":185,"endColumn":79},{"ruleId":"59","severity":1,"message":"60","line":203,"column":1,"nodeType":"61","messageId":"62","endLine":207,"endColumn":75},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'getMovies' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]